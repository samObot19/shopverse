syntax = "proto3";

option go_package = "proto/pb;";
package pb;

// The ProductService defines the gRPC service for managing products.
service ProductService {
  // Create a new product
  rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse);

  // Get a product by its ID
  rpc GetProductByID (GetProductByIDRequest) returns (GetProductByIDResponse);

  // Get all products with optional filters
  rpc GetAllProducts (GetAllProductsRequest) returns (GetAllProductsResponse);

  // Update an existing product
  rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductResponse);

  // Delete a product by its ID
  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse);

  // Update the stock quantity of a product
  rpc UpdateStock (UpdateStockRequest) returns (UpdateStockResponse);

  // Get products by category
  rpc GetProductsByCategory (GetProductsByCategoryRequest) returns (GetProductsByCategoryResponse);

  // Search for products based on a query string
  rpc SearchProducts (SearchProductsRequest) returns (SearchProductsResponse);
}

// Product message represents a product entity
message Product {
  string id = 1;
  string title = 2;
  string description = 3;
  double price = 4;
  int32 stock = 5;
  string category = 6;
  Attributes attributes = 7;
  repeated string images = 8;
  double ratings = 9;
  string created_at = 10;
}

// Attributes message represents additional product attributes
message Attributes {
  string color = 1;
  repeated string size = 2;
}

// Request and Response messages for each RPC

// CreateProduct
message CreateProductRequest {
  Product product = 1;
}
message CreateProductResponse {
  string message = 1;
}

// GetProductByID
message GetProductByIDRequest {
  string id = 1;
}
message GetProductByIDResponse {
  Product product = 1;
}

// GetAllProducts
message GetAllProductsRequest {
  map<string, string> filters = 1; // Optional filters as key-value pairs
}
message GetAllProductsResponse {
  repeated Product products = 1;
}

// UpdateProduct
message UpdateProductRequest {
  string id = 1;
  Product product = 2;
}
message UpdateProductResponse {
  string message = 1;
}

// DeleteProduct
message DeleteProductRequest {
  string id = 1;
}
message DeleteProductResponse {
  string message = 1;
}

// UpdateStock
message UpdateStockRequest {
  string id = 1;
  int32 quantity = 2;
}
message UpdateStockResponse {
  string message = 1;
}

// GetProductsByCategory
message GetProductsByCategoryRequest {
  string category = 1;
}
message GetProductsByCategoryResponse {
  repeated Product products = 1;
}

// SearchProducts
message SearchProductsRequest {
  string query = 1;
}
message SearchProductsResponse {
  repeated Product products = 1;
}