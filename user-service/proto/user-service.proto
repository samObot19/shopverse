syntax = "proto3";

package user;

option go_package = "proto/pb;user";

// User message definition
message User {
  string id = 1;               // User ID
  string google_id = 2;        // Google unique user ID
  string name = 3;             // User name
  string email = 4;            // User email
  string password = 5;         // User password (optional, for fallback authentication)
  string profile_picture = 6;  // URL to the user's profile picture
  string role = 7;             // User role (e.g., "customer", "admin")
}

// Request for AddUser
message AddUserRequest {
  string google_id = 1;        // Google unique user ID
  string name = 2;             // User name
  string email = 3;            // User email
  string password = 4;         // User password (optional)
  string profile_picture = 5;  // URL to the user's profile picture
}

// Response for AddUser
message AddUserResponse {
  User user = 1;               // The created user object
}

// Request for GetUserByID
message GetUserByIDRequest {
  string id = 1;               // User ID
}

// Response for GetUserByID
message GetUserByIDResponse {
  User user = 1;               // The retrieved user object
}

// Request for UpdateUser
message UpdateUserRequest {
  User user = 1;               // Updated user object
}

// Response for UpdateUser
message UpdateUserResponse {
  User user = 1;               // The updated user object
}

// Request for PromoteUser
message PromoteUserRequest {
  string username = 1;         // Username to promote
}

// Response for PromoteUser
message PromoteUserResponse {
  string message = 1;          // Success message
}

// Request for GetUser
message GetUserRequest {
  string username = 1;         // Username to retrieve
}

// Response for GetUser
message GetUserResponse {
  User user = 1;               // User object
}

// Request for GetAllUsers
message GetAllUsersRequest {}

// Response for GetAllUsers
message GetAllUsersResponse {
  repeated User users = 1;     // List of all users
}

// UserService definition
service UserService {
  // Add a new user
  rpc AddUser(AddUserRequest) returns (AddUserResponse);

  // Update an existing user
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);

  // Promote a user to admin
  rpc PromoteUser(PromoteUserRequest) returns (PromoteUserResponse);

  // Get a single user by username
  rpc GetUser(GetUserRequest) returns (GetUserResponse);

  // Get all users
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);

  // Get a single user by ID
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);
}